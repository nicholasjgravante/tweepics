@model Tweepics.Web.ViewModels.Display.DisplayTweetsViewModel
@using Tweepics.Web.Models;

<div class="filter-box filter-box-custom">
    @if (Model.ResultInfo.USSenators.Count > 0)
    {
        <div class="card">
            <div class="card-header card-header-custom" id="headingOne">
                <h5 class="mb-0">
                    <button class="btn card-header-link" data-toggle="collapse" data-target="#collapseOne"
                            aria-expanded="false" aria-controls="collapseOne">
                        U.S. Senator
                    </button>
                </h5>
            </div>
            <div id="collapseOne" class="collapse" aria-labelledby="headingOne">
                <div class="card-body card-body-custom">
                    <div class="list-group list-group-custom">
                        @foreach (var official in Model.ResultInfo.Officials)
                        {
                            <a class="list-group-item group-item-options" data-toggle="button"
                               onclick="location.href='@Url.Action("Tweets", new TweetQueryInputModel
                                                              {
                                                                  QueryType = Model.QueryType,
                                                                  OriginalQuery = Model.OriginalQuery,
                                                                  Officials = new List<string> { official.Name.FirstLast }
                                                              })'">
                                @official.Name.FirstLast (@official.Party[0].ToString().ToUpper() - @official.Office.State.ToUpper())
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="card">
        <div class="card-header card-header-custom" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn card-header-link collapsed" data-toggle="collapse" data-target="#collapseTwo"
                        aria-expanded="true" aria-controls="collapseTwo">
                    State
                </button>
            </h5>
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo">
            <div class="card-body card-body-custom">
                <div class="list-group  list-group-custom">
                    @foreach (var state in Model.ResultInfo.States)
                    {
                        <a class="list-group-item group-item-options" data-toggle="button"
                           onclick="location.href='@Url.Action("Tweets", new TweetQueryInputModel
                                                          {
                                                              QueryType = Model.QueryType,
                                                              OriginalQuery = Model.OriginalQuery,
                                                              States = new List<string> { state }
                                                          })'">
                            @state
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header card-header-custom" id="headingThree">
            <h5 class="mb-0">
                <button class="btn card-header-link collapsed" data-toggle="collapse" data-target="#collapseThree"
                        aria-expanded="true" aria-controls="collapseThree">
                    Party
                </button>
            </h5>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree">
            <div class="card-body card-body-custom">
                <div class="list-group">
                    @foreach (var party in Model.ResultInfo.Parties)
                    {
                        <a class="list-group-item group-item-options" data-toggle="button"
                           onclick="location.href='@Url.Action("Tweets", new TweetQueryInputModel
                                                          {
                                                              QueryType = Model.QueryType,
                                                              OriginalQuery = Model.OriginalQuery,
                                                              Parties = new List<string> { party }
                                                          })'">
                            @party
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>